version: '3.2'

services:
  apipostgresdb-serve-development:
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_min_duration_statement=0 -c log_statement=all -c log_duration=on
    container_name: ${APP_NAME}-apipostgresdb-serve-development
    environment:
      - POSTGRES_DB=${APP_NAME}_apipostgres
      - POSTGRES_PASSWORD=${APP_NAME}_password
      - POSTGRES_USER=${APP_NAME}_user
    image: postgres:12.2
    networks:
      - apipostgresdb_serve-development_nw
    volumes:
      - "./docker_data_serve-development/apipostgresdb:/var/lib/postgresql"

  apiweb-serve-development:
    build: api
    command: >
      bash -c "set -x;
               cd /opt/api;
               pip install -r requirements.txt;
               while true; do python app.py; done;"
    container_name: ${APP_NAME}-apiweb-serve-development
    environment: &api_env
      - APP_NAME=$APP_NAME
      - COMMAND_NAME=$COMMAND_NAME
      - COMPOSITION=serve-development
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - ELASTICSEARCH_PASSWORD=$ELASTICSEARCH_PASSWORD
      - ELASTICSEARCH_UNAME=$ELASTICSEARCH_UNAME
      - FLASK_SECRET=$FLASK_SECRET
      - MACHINE_ENV=development
      - NLPDATA_INFRA_HTPASSWD=$NLPDATA_INFRA_HTPASSWD
      - TLD=$TLD
      - TORCHSERVE_URL=$TORCHSERVE_URL
    image: ${APP_NAME}${TLD}/api:1.0
    networks:
      - apipostgresdb_serve-development_nw
      - nginx_serve-development_nw
      - torchserve_serve-development_nw
    volumes:
      - ./api:/opt/api

  jupyter-serve-development:
    build:
      context: ./api
      dockerfile: ../jupyter/Dockerfile
    command: >
      bash -c "start-notebook.sh --NotebookApp.base_url='/jupyter' \
                                 --NotebookApp.token='${JUPYTER_TOKEN}';"
    container_name: ${APP_NAME}-jupyter-serve-development
    environment: *api_env
    networks:
      - nginx_serve-development_nw
    volumes:
      - ./api:/opt/api
      - ./jupyter/work:/home/jovyan/work

  nginx-serve-development:
    build:
      args:
        - COMPOSITION=serve-development
      context: ./nginx
      dockerfile: ./Dockerfile.nossl
    container_name: ${APP_NAME}-nginx-serve-development
    depends_on:
      - apiweb-serve-development
    networks:
      - nginx_serve-development_nw
    ports:
      - 80:80

  torchserve-serve-development:
    command: ${TORCHSERVE_CMD:-'torchserve --start --model-store model-store --models stsbrobertabase.mar --ncs'}
    build:
      context: ./torchserve
    container_name: ${APP_NAME}-torchserve-serve-development
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 2g
    env_file: .env
    networks:
      - torchserve_serve-development_nw

networks:
  apipostgresdb_serve-development_nw:
    driver: bridge
  nginx_serve-development_nw:
    driver: bridge
  torchserve_serve-development_nw:
    driver: bridge

volumes:
  docker_data_serve-development:
